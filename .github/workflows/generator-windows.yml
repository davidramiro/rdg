name: Custom Windows Client Generator
run-name: Custom Windows Client Generator
on: 
  workflow_dispatch:
    inputs:
      server:
        description: 'Rendezvous Server'
        required: true
        default: ''
        type: string
      key:
        description: 'Public Key'
        required: true
        default: ''
        type: string

env:
  SCITER_RUST_VERSION: "1.75" # https://github.com/rustdesk/rustdesk/discussions/7503, also 1.78 has ABI change which causes our sciter version not working, https://blog.rust-lang.org/2024/03/30/i128-layout-update.html
  RUST_VERSION: "1.75" # sciter failed on m1 with 1.78 because of https://blog.rust-lang.org/2024/03/30/i128-layout-update.html
  CARGO_NDK_VERSION: "3.1.2"
  SCITER_ARMV7_CMAKE_VERSION: "3.29.7"
  SCITER_NASM_DEBVERSION: "2.14-1"
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.24.5"
  ANDROID_FLUTTER_VERSION: "3.24.5" 
  # for arm64 linux because official Dart SDK does not work
  FLUTTER_ELINUX_VERSION: "3.16.9"
  TAG_NAME: "${{ inputs.upload-tag }}"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  # vcpkg version: 2025.01.13
  VCPKG_COMMIT_ID: "6f29f12e82a8293156836ad81cc9bf5af41fe836"
  VERSION: "1.3.8"
  NDK_VERSION: "r27c"
  #signing keys env variable checks
  ANDROID_SIGNING_KEY: "${{ secrets.ANDROID_SIGNING_KEY }}"
  MACOS_P12_BASE64: "${{ secrets.MACOS_P12_BASE64 }}"
  UPLOAD_ARTIFACT: 'true'
  SIGN_BASE_URL: "${{ secrets.SIGN_BASE_URL }}"
  STATUS_URL: "${{ secrets.GENURL }}/updategh"


jobs:
  generate-bridge:
    uses: ./.github/workflows/bridge.yml
    with:
      version: '1.3.8'

  build-RustDeskTempTopMostWindow:
    uses: ./.github/workflows/third-party-RustDeskTempTopMostWindow.yml
    with:
      upload-artifact: true
      target: windows-2022
      configuration: Release
      platform: x64
      target_version: Windows10
    strategy:
      fail-fast: false

  build-for-windows-flutter:
    name: Build Windows
    needs: [build-RustDeskTempTopMostWindow, generate-bridge]
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          # - { target: i686-pc-windows-msvc        , os: windows-2022                  }
          # - { target: x86_64-pc-windows-gnu       , os: windows-2022                  }
          - {
              target: x86_64-pc-windows-msvc,
              os: windows-2022,
              arch: x86_64,
              vcpkg-triplet: x64-windows-static,
            }
          # - { target: aarch64-pc-windows-msvc, os: windows-2022, arch: aarch64 }
    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Checkout source code
        if: ${{ env.VERSION != 'master' }}
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          repository: davidramiro/rd-mf
          ref: refs/tags/${{ env.VERSION }}
          submodules: recursive

      - name: Checkout source code
        if: ${{ env.VERSION == 'master' }}
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          repository: davidramiro/rd-mf
          submodules: recursive

      - name: Restore bridge files
        uses: actions/download-artifact@master
        with:
          name: bridge-artifact
          path: ./

      - name: Install ImageMagick on Windows
        run: |
          choco install -y imagemagick.app --no-progress
          Get-ChildItem -Path "${env:ProgramFiles}" | % { $_.FullName } | Select-String -Pattern "[\/\\]ImageMagick[^\/\\]*$" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: fix flutter_gpu_texture_renderer (fixed in master rustdesk)
        shell: bash
        run: |
          sed -i -e 's|2ded7f146437a761ffe6981e2f742038f85ca68d|08a471bb8ceccdd50483c81cdfa8b81b07b14b87|' ./flutter/pubspec.lock
          sed -i -e 's|2ded7f146437a761ffe6981e2f742038f85ca68d|08a471bb8ceccdd50483c81cdfa8b81b07b14b87|' ./flutter/pubspec.yaml
      
      - name: change appname to custom
        continue-on-error: true
        shell: bash
        run: |
          # ./Cargo.toml
          sed -i -e 's|description = "RustDesk Remote Desktop"|description = "MindfieldConnect"|' ./Cargo.toml
          sed -i -e 's|ProductName = "RustDesk"|ProductName = "MindfieldConnect"|' ./Cargo.toml
          sed -i -e 's|FileDescription = "RustDesk Remote Desktop"|FileDescription = "MindfieldConnect"|' ./Cargo.toml
          sed -i -e 's|OriginalFilename = "rustdesk.exe"|OriginalFilename = "MindfieldConnect.exe"|' ./Cargo.toml
          # ./libs/portable/Cargo.toml
          sed -i -e 's|description = "RustDesk Remote Desktop"|description = "MindfieldConnect"|' ./libs/portable/Cargo.toml
          sed -i -e 's|ProductName = "RustDesk"|ProductName = "MindfieldConnect"|' ./libs/portable/Cargo.toml
          sed -i -e 's|FileDescription = "RustDesk Remote Desktop"|FileDescription = "MindfieldConnect"|' ./libs/portable/Cargo.toml
          sed -i -e 's|OriginalFilename = "rustdesk.exe"|OriginalFilename = "MindfieldConnect.exe"|' ./libs/portable/Cargo.toml
          # ./flutter/windows/runner/Runner.rc
          sed -i -e 's|"RustDesk Remote Desktop"|"MindfieldConnect"|' ./flutter/windows/runner/Runner.rc
          sed -i -e 's|VALUE "InternalName", "rustdesk" "\0"|VALUE "InternalName", "MindfieldConnect" "\0"|' ./flutter/windows/runner/Runner.rc
          sed -i -e 's|"rustdesk.exe"|"mindfieldconnect.exe"|' ./flutter/windows/runner/Runner.rc
          sed -i -e 's|"RustDesk"|"MindfieldConnect"|' ./flutter/windows/runner/Runner.rc
          # ./src/lang/en.rs
          find ./src/lang -name "*.rs" -exec sed -i -e 's|RustDesk|MindfieldConnect|' {} \;
          

      - name: change company name
        continue-on-error: true
        shell: bash
        run: |
          sed -i -e 's|Purslane Ltd|Mindfield Biosystems Ltd.|' ./flutter/lib/desktop/pages/desktop_setting_page.dart
          sed -i -e 's|Purslane Ltd.|Mindfield Biosystems Ltd.|' ./res/setup.nsi
          sed -i -e 's|PURSLANE|Mindfield Biosystems Ltd.|' ./res/msi/preprocess.py
          sed -i -e 's|Purslane Ltd|Mindfield Biosystems Ltd.|' ./res/msi/preprocess.py
          sed -i -e 's|"Copyright © 2025 Purslane Ltd. All rights reserved."|"Copyright © 2025 Mindfield Biosystems Ltd.. All rights reserved."|' ./flutter/windows/runner/Runner.rc
          sed -i -e 's|Purslane Ltd|Mindfield Biosystems Ltd.|' ./flutter/windows/runner/Runner.rc
          sed -i -e 's|Purslane Ltd|Mindfield Biosystems Ltd.|' ./Cargo.toml
          sed -i -e 's|Purslane Ltd|Mindfield Biosystems Ltd.|' ./libs/portable/Cargo.toml
             
      - name: change url to custom
        continue-on-error: true
        shell: bash
        run: |
          sed -i -e 's|Homepage: https://rustdesk.com|Homepage: https://mindfield.de/|' ./build.py
          sed -i -e "s|launchUrl(Uri.parse('https://rustdesk.com'));|launchUrl(Uri.parse('https://mindfield.de/'));|" ./flutter/lib/common.dart
          sed -i -e "s|launchUrlString('https://rustdesk.com');|launchUrlString('https://mindfield.de/');|" ./flutter/lib/desktop/pages/desktop_setting_page.dart
          sed -i -e "s|launchUrlString('https://rustdesk.com/privacy.html')|launchUrlString('https://mindfield-shop.com/datenschutz/')|" ./flutter/lib/desktop/pages/desktop_setting_page.dart
          sed -i -e "s|const url = 'https://rustdesk.com/';|const url = 'https://mindfield.de/';|" ./flutter/lib/mobile/pages/settings_page.dart
          sed -i -e "s|launchUrlString('https://rustdesk.com/privacy.html')|launchUrlString('https://mindfield-shop.com/datenschutz/')|" ./flutter/lib/mobile/pages/settings_page.dart
          sed -i -e "s|https://rustdesk.com/privacy.html|https://mindfield-shop.com/datenschutz/|" ./flutter/lib/desktop/pages/install_page.dart
          sed -i -e "s|https://rustdesk.com/|https://mindfield.de/|" ./res/setup.nsi

      - name: change download link to custom
        continue-on-error: true
        shell: bash
        run: |
          sed -i -e 's|https://rustdesk.com/download|https://mindfield.de/downloads-de|' ./flutter/lib/desktop/pages/desktop_home_page.dart
          sed -i -e 's|https://rustdesk.com/download|https://mindfield.de/downloads-de|' ./flutter/lib/mobile/pages/connection_page.dart
          sed -i -e 's|https://rustdesk.com/download|https://mindfield.de/downloads-de|' ./src/ui/index.tis

      - name: set server, key, and apiserver
        continue-on-error: true
        shell: bash
        run: |
          sed -i -e 's|rs-ny.rustdesk.com|${{ inputs.server }}|' ./libs/hbb_common/src/config.rs
          sed -i -e 's|OeVuKk5nlHiXp+APNn0Y3pC1Iwpwn44JGqrQCsWqmBw=|${{ inputs.key }}|' ./libs/hbb_common/src/config.rs
          # ./flutter/pubspec.yaml
          #sed -i '/intl:/a \ \ archive: ^3.6.1' ./flutter/pubspec.yaml

      - name: allow custom.txt
        continue-on-error: true
        run: |
          Invoke-WebRequest -Uri https://raw.githubusercontent.com/bryangerlach/rdgen/refs/heads/master/.github/patches/allowCustom.diff -OutFile allowCustom.diff
          git apply allowCustom.diff
          Invoke-WebRequest -Uri https://raw.githubusercontent.com/bryangerlach/rdgen/refs/heads/master/.github/patches/removeSetupServerTip.diff -OutFile removeSetupServerTip.diff
          git apply removeSetupServerTip.diff


      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: ${{ env.LLVM_VERSION }}


      - name: Install flutter
        uses: subosito/flutter-action@v2.12.0 #https://github.com/subosito/flutter-action/issues/277
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      # https://github.com/flutter/flutter/issues/155685
      - name: Replace engine with rustdesk custom flutter engine
        run: |
          flutter doctor -v
          flutter precache --windows
          Invoke-WebRequest -Uri https://github.com/rustdesk/engine/releases/download/main/windows-x64-release.zip -OutFile windows-x64-release.zip
          Expand-Archive -Path windows-x64-release.zip -DestinationPath windows-x64-release
          mv -Force windows-x64-release/*  C:/hostedtoolcache/windows/flutter/stable-${{ env.FLUTTER_VERSION }}-x64/bin/cache/artifacts/engine/windows-x64-release/

      - name: Patch flutter
        continue-on-error: true
        shell: bash
        run: |
          cp .github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff $(dirname $(dirname $(which flutter)))
          cd $(dirname $(dirname $(which flutter)))
          [[ "3.24.5" == ${{env.FLUTTER_VERSION}} ]] && git apply flutter_3.24.4_dropdown_menu_enableFilter.diff

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.SCITER_RUST_VERSION }}
          targets: ${{ matrix.job.target }}
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ matrix.job.os }}


      - name: Setup vcpkg with Github Actions binary cache
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: C:\vcpkg
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
          doNotCache: false

      - name: Install vcpkg dependencies
        env:
          VCPKG_DEFAULT_HOST_TRIPLET: ${{ matrix.job.vcpkg-triplet }}
        run: |
          if ! $VCPKG_ROOT/vcpkg \
            install \
            --triplet ${{ matrix.job.vcpkg-triplet }} \
            --x-install-root="$VCPKG_ROOT/installed"; then
            find "${VCPKG_ROOT}/" -name "*.log" | while read -r _1; do
              echo "$_1:"
              echo "======"
              cat "$_1"
              echo "======"
              echo ""
            done
            exit 1
          fi
          head -n 100 "${VCPKG_ROOT}/buildtrees/ffmpeg/build-${{ matrix.job.vcpkg-triplet }}-rel-out.log" || true
        shell: bash

      - name: fix connection delay
        continue-on-error: true
        shell: bash
        run: |
          sed -i -e '/if !key.is_empty() && !token.is_empty() {/,/}/d' ./src/client.rs


      - name: removeNewVersionNotif
        continue-on-error: true
        run: | 
          Invoke-WebRequest -Uri https://raw.githubusercontent.com/bryangerlach/rdgen/refs/heads/master/.github/patches/removeNewVersionNotif.diff -Outfile removeNewVersionNotif.diff
          git apply removeNewVersionNotif.diff


      - name: replace flutter icons
        continue-on-error: true
        run: |
          cd ./flutter
          #flutter pub upgrade win32
          flutter pub get
          flutter pub run flutter_launcher_icons
          cd ..

      - name: Build rustdesk
        run: |
          Invoke-WebRequest -Uri https://github.com/rustdesk-org/rdev/releases/download/usbmmidd_v2/usbmmidd_v2.zip -OutFile usbmmidd_v2.zip
          Expand-Archive usbmmidd_v2.zip -DestinationPath . -Force
          python3 .\build.py --portable --hwcodec --flutter --vram --skip-portable-pack
          Remove-Item -Path usbmmidd_v2\Win32 -Recurse
          Remove-Item -Path "usbmmidd_v2\deviceinstaller64.exe", "usbmmidd_v2\deviceinstaller.exe", "usbmmidd_v2\usbmmidd.bat"
          mv ./flutter/build/windows/x64/runner/Release ./rustdesk
          mv -Force .\usbmmidd_v2 ./rustdesk   

      - name: icon stuff
        continue-on-error: true
        run: |
          mv ./rustdesk/data/flutter_assets/assets/icon.svg ./rustdesk/data/flutter_assets/assets/icon.svg.bak
          magick ./res/icon.png ./rustdesk/data/flutter_assets/assets/icon.svg

      - name: logo stuff
        continue-on-error: true
        run: |
          cp ./res/icon.png ./rustdesk/data/flutter_assets/assets/logo.png


      - name: find Runner.res
        # Windows: find Runner.res (compiled from ./flutter/windows/runner/Runner.rc), copy to ./Runner.res
        # Runner.rc does not contain actual version, but Runner.res does
        continue-on-error: true
        shell: bash
        run: |
          runner_res=$(find . -name "Runner.res");
          if [ "$runner_res" == "" ]; then
            echo "Runner.res: not found";
          else
            echo "Runner.res: $runner_res";
            cp $runner_res ./libs/portable/Runner.res;
            echo "list ./libs/portable/Runner.res";
            ls -l ./libs/portable/Runner.res;
          fi

      - name: Download RustDeskTempTopMostWindow artifacts
        uses: actions/download-artifact@master
        if: env.UPLOAD_ARTIFACT == 'true'
        with:
          name: topmostwindow-artifacts
          path: "./rustdesk"

      
      - name: zip dlls
        continue-on-error: true
        shell: pwsh
        run: |
          Compress-Archive -Path ./rustdesk/*.dll, ./rustdesk/*.exe -DestinationPath ./rustdesk/unsigned_files.zip -CompressionLevel Fastest

      - name: sign dlls
        continue-on-error: true
        shell: bash
        run: |
          if [ ! -z "${{ secrets.SIGN_BASE_URL }}" ] && [ ! -z "${{ secrets.SIGN_API_KEY }}" ]; then
            curl -X POST -F "file=@./rustdesk/unsigned_files.zip" \
              -H "X-API-KEY: ${{ secrets.SIGN_API_KEY }}" \
              -m 900 \
              "${{ secrets.SIGN_BASE_URL }}/sign/" -o ./rustdesk/signed_files.zip
          else
            echo "Signing skipped - signing URL or API key not configured"
            cp ./rustdesk/unsigned_files.zip ./rustdesk/signed_files.zip
          fi

      - name: unzip dlls
        continue-on-error: true
        shell: pwsh
        run: |
          Expand-Archive -Path ./rustdesk/signed_files.zip -DestinationPath ./rustdesk/ -Force
          Remove-Item ./rustdesk/unsigned_files.zip
          Remove-Item ./rustdesk/signed_files.zip
          
        

      - name: Build self-extracted executable
        shell: bash
        if: env.UPLOAD_ARTIFACT == 'true'
        run: |
          mv "./rustdesk/rustdesk.exe" "./rustdesk/MindfieldConnect.exe" || echo "rustdesk.exe"
          sed -i '/dpiAware/d' res/manifest.xml
          pushd ./libs/portable
          pip3 install -r requirements.txt
          python3 ./generate.py -f ../../rustdesk/ -o . -e "../../rustdesk/MindfieldConnect.exe"
          popd
          mkdir -p ./SignOutput
          mv ./target/release/rustdesk-portable-packer.exe "./SignOutput/rustdesk.exe"

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Build msi
        continue-on-error: true
        if: env.UPLOAD_ARTIFACT == 'true'
        run: |
          $myappname = "MindfieldConnect" -replace '\s','_'
          cp "rustdesk/MindfieldConnect.exe" "rustdesk/${myappname}.exe" -ErrorAction SilentlyContinue
          pushd ./res/msi
          python preprocess.py --app-name "$myappname" --arp -d ../../rustdesk
          nuget restore msi.sln
          msbuild msi.sln -p:Configuration=Release -p:Platform=x64 /p:TargetVersion=Windows10
          cp ./Package/bin/x64/Release/en-us/Package.msi ../../SignOutput/rustdesk-latest.msi
          mv ./Package/bin/x64/Release/en-us/Package.msi ../../SignOutput/rustdesk.msi
          sha256sum ../../SignOutput/rustdesk.msi


      - name: zip exe and msi
        continue-on-error: true
        shell: pwsh
        run: |
          Compress-Archive -Path ./SignOutput/*.exe, ./SignOutput/*.msi -DestinationPath ./SignOutput/unsigned_files.zip -CompressionLevel Fastest

      - name: sign exe and msi
        continue-on-error: true
        shell: bash
        run: |
          if [ ! -z "${{ secrets.SIGN_BASE_URL }}" ] && [ ! -z "${{ secrets.SIGN_API_KEY }}" ]; then
            curl -X POST -F "file=@./SignOutput/unsigned_files.zip" \
              -H "X-API-KEY: ${{ secrets.SIGN_API_KEY }}" \
              -m 900 \
              "${{ secrets.SIGN_BASE_URL }}/sign/" -o ./SignOutput/signed_files.zip
          else
            echo "Signing skipped - signing URL or API key not configured"
            cp ./SignOutput/unsigned_files.zip ./SignOutput/signed_files.zip
          fi

      - name: unzip exe and msi
        continue-on-error: true
        shell: pwsh
        run: |
          Expand-Archive -Path ./SignOutput/signed_files.zip -DestinationPath ./SignOutput/ -Force
          Remove-Item ./SignOutput/unsigned_files.zip
          Remove-Item ./SignOutput/signed_files.zip

      - name: rename rustdesk.exe to filename.exe
        run: |
          mv ./SignOutput/rustdesk.exe "./SignOutput/mindfieldconnect.exe" || echo "rustdesk"

      - name: rename rustdesk.msi to filename.msi
        continue-on-error: true
        run: |
          mv ./SignOutput/rustdesk.msi "./SignOutput/mindfieldconnect.msi" || echo "rustdesk"


      - name: Get current date
        id: date
        uses: Kaven-Universe/github-action-current-date-time@v1
        with:
          format: "YYYY_MM_DD HH_mm_ss"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }} - Windows -  ${{ steps.date.outputs.time }}
          body: |
            Artifact from Windows RD build
          draft: true
          prerelease: false
      - name: Upload release asset MSI
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./SignOutput/mindfieldconnect.msi
          asset_name: mindfieldconnect.msi
          asset_content_type: application/x-msi
      - name: Upload release asset EXE
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./SignOutput/mindfieldconnect.exe
          asset_name: mindfieldconnect.exe
          asset_content_type: application/x-msdownload
      - name: Publish release
        uses: StuYarrow/publish-release@v1.1.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          id: ${{ steps.create_release.outputs.id }}